  
BEGIN;
DROP TABLE IF EXISTS "ingredient", "recipe", "meal", "group", "user", "review", "type", "family", "type_defines_recipe", "family_describes_ingredient", "user_likes_recipe", "user_belongs_group", "recipe_contains_ingredient", "meal_has_recipe";



CREATE TABLE "ingredient" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "name" VARCHAR(30) NOT NULL,
    "url" VARCHAR(100),
    "weight" BOOLEAN NOT NULL,
    "volume" BOOLEAN NOT NULL,
    "countable" BOOLEAN NOT NULL,
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "user" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "first_name" VARCHAR(50) NOT NULL,
    "last_name" VARCHAR(50) NOT NULL,
    "user_name" VARCHAR(20) NOT NULL,
    "password" VARCHAR(70) NOT NULL,
    "account_role" VARCHAR (20) NOT NULL,
    "email" VARCHAR(50) NOT NULL,
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);


CREATE TABLE "recipe" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "title" VARCHAR(100) NOT NULL,
    "url" VARCHAR  NOT NULL,
    "difficulty" VARCHAR(15),
    "instructions" VARCHAR,
    "cooking_time" INTEGER  NOT NULL,
    "number_people" INTEGER NOT NULL,
    "user_id" INTEGER  REFERENCES "user" ("id"),
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "group" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "name" VARCHAR(30) NOT NULL,
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "meal" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "day" DATE NOT NULL,
    "time" VARCHAR (25) NOT NULL,
    "group_id" INTEGER  REFERENCES "group" ("id"),
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);





CREATE TABLE "review" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "comment" TEXT,
    "grade" INTEGER NOT NULL,
    "recipe_id" INTEGER  REFERENCES "recipe" ("id"),
    "user_id" INTEGER  REFERENCES "user" ("id"),
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "type" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "name" VARCHAR(20) NOT NULL,
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "family" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "name" VARCHAR(40) NOT NULL,
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "type_defines_recipe" (
    "recipe_id" INTEGER REFERENCES "recipe" ("id"),
    "type_id" INTEGER  REFERENCES "type" ("id"),
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "family_describes_ingredient" (
    "ingredient_id" INTEGER REFERENCES "ingredient" ("id"),
    "family_id" INTEGER  REFERENCES "family" ("id"),
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "user_likes_recipe" (
    "recipe_id" INTEGER  REFERENCES "recipe" ("id"),
    "user_id" INTEGER REFERENCES "user" ("id"),
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);


CREATE TABLE "user_belongs_group" (
    "group_id" INTEGER REFERENCES "group" ("id"),
    "user_id" INTEGER  REFERENCES "user" ("id"),
    "user_role" VARCHAR (25)  NOT NULL,
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "recipe_contains_ingredient" (
    "recipe_id" INTEGER  REFERENCES "recipe" ("id"),
    "ingredient_id" INTEGER  REFERENCES "ingredient" ("id"),
    "quantity" REAL  NOT NULL,
    "unit" VARCHAR(30)  DEFAULT NULL,
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);

CREATE TABLE "meal_has_recipe" (
    "meal_id" INTEGER  REFERENCES "meal" ("id"),
    "recipe_id" INTEGER  REFERENCES "recipe" ("id"),
    "number_people" INTEGER  NOT NULL,
    "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP
);



COMMIT;


BEGIN;

--


INSERT INTO  "ingredient" ("id", "name" , "weight" , "volume","countable" ) OVERRIDING SYSTEM VALUE
VALUES 

( 1, 'Alcool', FALSE, TRUE, FALSE ),
( 2, 'Bière', FALSE, TRUE, FALSE ),
( 3, 'Champagne', FALSE, TRUE, FALSE ),
( 4, 'Cidre', FALSE, TRUE, FALSE ),
( 5, 'Eau', FALSE, TRUE, FALSE ),
( 6, 'Lait d’amande', FALSE, TRUE, FALSE ),
( 7, 'Lait de coco', FALSE, TRUE, FALSE ),
( 8, 'Lait végétal', FALSE, TRUE, FALSE ),
( 9, 'Pastis', FALSE, TRUE, FALSE ),
( 10, 'Rhum', FALSE, TRUE, FALSE ),
( 11, 'Tonyu', FALSE, TRUE, FALSE ),
( 12, 'Vin', FALSE, TRUE, FALSE ),
( 13, 'Vin blanc', FALSE, TRUE, FALSE ),
( 14, 'Vin rouge', FALSE, TRUE, FALSE ),
( 15, 'Abricot', TRUE, FALSE, FALSE ),
( 16, 'Abricot sec', TRUE, FALSE, FALSE ),
( 17, 'Agar-agar', TRUE, FALSE, FALSE ),
( 18, 'Agrumes', TRUE, FALSE, FALSE ),
( 19, 'Ail', FALSE, FALSE, TRUE ),
( 20, 'Ail des ours', FALSE, FALSE, TRUE ),
( 21, 'Amande', TRUE, FALSE, FALSE ),
( 22, 'Ananas', TRUE, FALSE, FALSE ),
( 23, 'Aneth', TRUE, FALSE, FALSE ),
( 24, 'Anone', TRUE, FALSE, FALSE ),
( 25, 'Arbouse', TRUE, FALSE, FALSE ),
( 26, 'Argousier', TRUE, FALSE, FALSE ),
( 27, 'Artichaut', TRUE, FALSE, FALSE ),
( 28, 'Asperge', TRUE, FALSE, FALSE ),
( 29, 'Aspérule', TRUE, FALSE, FALSE ),
( 30, 'Aubépine', TRUE, FALSE, FALSE ),
( 31, 'Aubergine', TRUE, FALSE, FALSE ),
( 32, 'Avocat', FALSE, FALSE, TRUE ),
( 33, 'Baies', TRUE, FALSE, FALSE ),
( 34, 'Bardane', TRUE, FALSE, FALSE ),
( 35, 'Basilic', TRUE, FALSE, FALSE ),
( 36, 'Batavia', TRUE, FALSE, FALSE ),
( 37, 'Bergamote', TRUE, FALSE, FALSE ),
( 38, 'Betterave', TRUE, FALSE, FALSE ),
( 39, 'Blette', TRUE, FALSE, FALSE ),
( 40, 'Bleue de Hongrie', TRUE, FALSE, FALSE ),
( 41, 'Bok choy', TRUE, FALSE, FALSE ),
( 42, 'Bourrache', TRUE, FALSE, FALSE ),
( 43, 'Brèdes mafane', TRUE, FALSE, FALSE ),
( 44, 'Brocoli', TRUE, FALSE, FALSE ),
( 45, 'Bulbes', TRUE, FALSE, FALSE ),
( 46, 'Cacao', TRUE, FALSE, FALSE ),
( 47, 'Canneberge', TRUE, FALSE, FALSE ),
( 48, 'Câpres', TRUE, FALSE, FALSE ),
( 49, 'Capucines', TRUE, FALSE, FALSE ),
( 50, 'Carambole', TRUE, FALSE, FALSE ),
( 51, 'Cardamine', TRUE, FALSE, FALSE ),
( 52, 'Cardon', TRUE, FALSE, FALSE ),
( 53, 'Carotte', TRUE, FALSE, FALSE ),
( 54, 'Caroube', TRUE, FALSE, FALSE ),
( 55, 'Carvi', TRUE, FALSE, FALSE ),
( 56, 'Cassis', TRUE, FALSE, FALSE ),
( 57, 'Cédrat', TRUE, FALSE, FALSE ),
( 58, 'Céleri rave', TRUE, FALSE, FALSE ),
( 59, 'Céleri-branche', TRUE, FALSE, FALSE ),
( 60, 'Cenelle', TRUE, FALSE, FALSE ),
( 61, 'Cèpe', TRUE, FALSE, FALSE ),
( 62, 'Cerfeuil', TRUE, FALSE, FALSE ),
( 63, 'Cerise', TRUE, FALSE, FALSE ),
( 64, 'Champignon de Paris', TRUE, FALSE, FALSE ),
( 65, 'Champignons noirs', TRUE, FALSE, FALSE ),
( 66, 'Chanterelle', TRUE, FALSE, FALSE ),
( 67, 'Chanvre', TRUE, FALSE, FALSE ),
( 68, 'Châtaigne', TRUE, FALSE, FALSE ),
( 69, 'Chayote', TRUE, FALSE, FALSE ),
( 70, 'Chia', TRUE, FALSE, FALSE ),
( 71, 'Chou blanc', TRUE, FALSE, FALSE ),
( 72, 'Chou chinois', TRUE, FALSE, FALSE ),
( 73, 'Chou kale', TRUE, FALSE, FALSE ),
( 74, 'Chou pointu', TRUE, FALSE, FALSE ),
( 75, 'Chou rouge', TRUE, FALSE, FALSE ),
( 76, 'Chou vert', TRUE, FALSE, FALSE ),
( 77, 'Chou-fleur', FALSE, FALSE, TRUE ),
( 78, 'Chou-rave', TRUE, FALSE, FALSE ),
( 79, 'Choucroute', TRUE, FALSE, FALSE ),
( 80, 'Choux de Bruxelles', TRUE, FALSE, FALSE ),
( 81, 'Ciboulette', TRUE, FALSE, FALSE ),
( 82, 'Citron jaune', FALSE, FALSE, TRUE ),
( 83, 'Citron vert', FALSE, FALSE, TRUE ),
( 84, 'Citronnelle', TRUE, FALSE, FALSE ),
( 85, 'Citrouille', FALSE, FALSE, TRUE ),
( 86, 'Clémentine', FALSE, FALSE, TRUE ),
( 87, 'Coing', TRUE, FALSE, FALSE ),
( 88, 'Combava', TRUE, FALSE, FALSE ),
( 89, 'Concombre', FALSE, FALSE, TRUE ),
( 90, 'Coquelicot', TRUE, FALSE, FALSE ),
( 91, 'Coriandre fraîche', TRUE, FALSE, FALSE ),
( 92, 'Cornichon', TRUE, FALSE, FALSE ),
( 93, 'Courge de Siam', TRUE, FALSE, FALSE ),
( 94, 'Courge spaghetti', TRUE, FALSE, FALSE ),
( 95, 'Courgeron', TRUE, FALSE, FALSE ),
( 96, 'Courges', TRUE, FALSE, FALSE ),
( 97, 'Courges musquées', TRUE, FALSE, FALSE ),
( 98, 'Courges potagères', TRUE, FALSE, FALSE ),
( 99, 'Courgette', FALSE, FALSE, TRUE ),
( 100, 'Cresson', TRUE, FALSE, FALSE ),
( 101, 'Crimini', TRUE, FALSE, FALSE ),
( 102, 'Crosse de fougère', TRUE, FALSE, FALSE ),
( 103, 'Cynorrhodon', TRUE, FALSE, FALSE ),
( 104, 'Cœur de palmier', TRUE, FALSE, FALSE ),
( 105, 'Daïkon', TRUE, FALSE, FALSE ),
( 106, 'Datte', TRUE, FALSE, FALSE ),
( 107, 'Doubeurre', TRUE, FALSE, FALSE ),
( 108, 'Dulse', TRUE, FALSE, FALSE ),
( 109, 'Échalote', TRUE, FALSE, FALSE ),
( 110, 'Endive', TRUE, FALSE, FALSE ),
( 111, 'Enoki', TRUE, FALSE, FALSE ),
( 112, 'Épinard', TRUE, FALSE, FALSE ),
( 113, 'Eryngii', TRUE, FALSE, FALSE ),
( 114, 'Estragon', TRUE, FALSE, FALSE ),
( 115, 'Fanes', TRUE, FALSE, FALSE ),
( 116, 'Farine de châtaigne', TRUE, FALSE, FALSE ),
( 117, 'Feijoa', TRUE, FALSE, FALSE ),
( 118, 'Fenouil', TRUE, FALSE, FALSE ),
( 119, 'Feuille de chêne', TRUE, FALSE, FALSE ),
( 120, 'Figue', TRUE, FALSE, FALSE ),
( 121, 'Figue séchée', TRUE, FALSE, FALSE ),
( 122, 'Fleur d’acacia', TRUE, FALSE, FALSE ),
( 123, 'Fleur d’oranger', TRUE, FALSE, FALSE ),
( 124, 'Fleur de courgette', TRUE, FALSE, FALSE ),
( 125, 'Fraise', TRUE, FALSE, FALSE ),
( 126, 'Framboise', TRUE, FALSE, FALSE ),
( 127, 'Frisée', TRUE, FALSE, FALSE ),
( 128, 'Fruit à pain', TRUE, FALSE, FALSE ),
( 129, 'Fruits rouges', TRUE, FALSE, FALSE ),
( 130, 'Fruits secs', TRUE, FALSE, FALSE ),
( 131, 'Germe de mungo', TRUE, FALSE, FALSE ),
( 132, 'Giraumon', TRUE, FALSE, FALSE ),
( 133, 'Girolles', TRUE, FALSE, FALSE ),
( 134, 'Goji', TRUE, FALSE, FALSE ),
( 135, 'Gombo', TRUE, FALSE, FALSE ),
( 136, 'Goyave', TRUE, FALSE, FALSE ),
( 137, 'Graines', TRUE, FALSE, FALSE ),
( 138, 'Graines de courge', TRUE, FALSE, FALSE ),
( 139, 'Graines de lin', TRUE, FALSE, FALSE ),
( 140, 'Graines de pavot', TRUE, FALSE, FALSE ),
( 141, 'Graines germées', TRUE, FALSE, FALSE ),
( 142, 'Grenade', TRUE, FALSE, FALSE ),
( 143, 'Groseille', TRUE, FALSE, FALSE ),
( 144, 'Guarana', TRUE, FALSE, FALSE ),
( 145, 'Haricot vert', TRUE, FALSE, FALSE ),
( 146, 'Huacatay', TRUE, FALSE, FALSE ),
( 147, 'Hubbard', TRUE, FALSE, FALSE ),
( 148, 'Iceberg', TRUE, FALSE, FALSE ),
( 149, 'Kabocha', TRUE, FALSE, FALSE ),
( 150, 'Kaki', TRUE, FALSE, FALSE ),
( 151, 'Kiwi', TRUE, FALSE, FALSE ),
( 152, 'Kombu', TRUE, FALSE, FALSE ),
( 153, 'Kumquat', TRUE, FALSE, FALSE ),
( 154, 'Lait d’amande', FALSE, TRUE, FALSE ),
( 155, 'Laitue', TRUE, FALSE, FALSE ),
( 156, 'Laitue de mer', TRUE, FALSE, FALSE ),
( 157, 'Laurier', FALSE, FALSE, TRUE ),
( 158, 'Lavande', TRUE, FALSE, FALSE ),
( 159, 'Lilas', TRUE, FALSE, FALSE ),
( 160, 'Litchi', TRUE, FALSE, FALSE ),
( 161, 'Livèche', TRUE, FALSE, FALSE ),
( 162, 'Lollo rosa', TRUE, FALSE, FALSE ),
( 163, 'Longue de Nice', TRUE, FALSE, FALSE ),
( 164, 'Macadamia', TRUE, FALSE, FALSE ),
( 165, 'Mâche', TRUE, FALSE, FALSE ),
( 166, 'Mandarine', TRUE, FALSE, FALSE ),
( 167, 'Mangue', TRUE, FALSE, FALSE ),
( 168, 'Maracuja', TRUE, FALSE, FALSE ),
( 169, 'Matcha', TRUE, FALSE, FALSE ),
( 170, 'Mélisse', TRUE, FALSE, FALSE ),
( 171, 'Melon', TRUE, FALSE, FALSE ),
( 172, 'Menthe', TRUE, FALSE, FALSE ),
( 173, 'Mibuna', TRUE, FALSE, FALSE ),
( 174, 'Mizuna', TRUE, FALSE, FALSE ),
( 175, 'Morille', TRUE, FALSE, FALSE ),
( 176, 'Mouron', TRUE, FALSE, FALSE ),
( 177, 'Mûre', TRUE, FALSE, FALSE ),
( 178, 'Muscade de Provence', TRUE, FALSE, FALSE ),
( 179, 'Myrtille', TRUE, FALSE, FALSE ),
( 180, 'Navet', TRUE, FALSE, FALSE ),
( 181, 'Néfle', TRUE, FALSE, FALSE ),
( 182, 'Noisette', TRUE, FALSE, FALSE ),
( 183, 'Noix de cajou', TRUE, FALSE, FALSE ),
( 184, 'Noix de coco', TRUE, FALSE, FALSE ),
( 185, 'Noix de pécan', TRUE, FALSE, FALSE ),
( 186, 'Noix de Grenoble', TRUE, FALSE, FALSE ),
( 187, 'Noix du Brésil', TRUE, FALSE, FALSE ),
( 188, 'Nori', TRUE, FALSE, FALSE ),
( 189, 'Oignon', FALSE, FALSE, TRUE ),
( 190, 'Okara', TRUE, FALSE, FALSE ),
( 191, 'Olives', TRUE, FALSE, FALSE ),
( 192, 'Orange', FALSE, FALSE, TRUE ),
( 193, 'Origan', TRUE, FALSE, FALSE ),
( 194, 'Ortie', TRUE, FALSE, FALSE ),
( 195, 'Oseille', TRUE, FALSE, FALSE ),
( 196, 'Pamplemousse', FALSE, FALSE, TRUE ),
( 197, 'Panais', TRUE, FALSE, FALSE ),
( 198, 'Papaye', TRUE, FALSE, FALSE ),
( 199, 'Pastèque', FALSE, FALSE, TRUE ),
( 200, 'Patidou', TRUE, FALSE, FALSE ),
( 201, 'Pâtisson', TRUE, FALSE, FALSE ),
( 202, 'Pêche', FALSE, FALSE, TRUE ),
( 203, 'Persil', TRUE, FALSE, FALSE ),
( 204, 'Persil tubéreux', TRUE, FALSE, FALSE ),
( 205, 'Pétales de rose', TRUE, FALSE, FALSE ),
( 206, 'Petit oignon blanc', TRUE, FALSE, FALSE ),
( 207, 'Physalis', TRUE, FALSE, FALSE ),
( 208, 'Pignons de pin', TRUE, FALSE, FALSE ),
( 209, 'Pimprenelle', TRUE, FALSE, FALSE ),
( 210, 'Pissenlit', TRUE, FALSE, FALSE ),
( 211, 'Pistache', TRUE, FALSE, FALSE ),
( 212, 'Pitaya', TRUE, FALSE, FALSE ),
( 213, 'Pleurote', TRUE, FALSE, FALSE ),
( 214, 'Poire', FALSE, FALSE, TRUE ),
( 215, 'Poireau', FALSE, FALSE, TRUE ),
( 216, 'Pois gourmand', TRUE, FALSE, FALSE ),
( 217, 'Poivron', FALSE, FALSE, TRUE ),
( 218, 'Pomarine', TRUE, FALSE, FALSE ),
( 219, 'Pomélo', TRUE, FALSE, FALSE ),
( 220, 'Pomme', FALSE, FALSE, TRUE ),
( 221, 'Pomme d’or', FALSE, FALSE, TRUE ),
( 222, 'Portobello', TRUE, FALSE, FALSE ),
( 223, 'Potimarron', FALSE, FALSE, TRUE ),
( 224, 'Potiron', FALSE, FALSE, TRUE ),
( 225, 'Potirons', FALSE, FALSE, TRUE ),
( 226, 'Poudre d’amande', TRUE, FALSE, FALSE ),
( 227, 'Pourpier', TRUE, FALSE, FALSE ),
( 228, 'Pousses de bambou', TRUE, FALSE, FALSE ),
( 229, 'Primevère', TRUE, FALSE, FALSE ),
( 230, 'Prune', TRUE, FALSE, FALSE ),
( 231, 'Pruneau', TRUE, FALSE, FALSE ),
( 232, 'Racines', TRUE, FALSE, FALSE ),
( 233, 'Radicchio', TRUE, FALSE, FALSE ),
( 234, 'Radis noir', TRUE, FALSE, FALSE ),
( 235, 'Radis roses', TRUE, FALSE, FALSE ),
( 236, 'Raifort', TRUE, FALSE, FALSE ),
( 237, 'Raisin', TRUE, FALSE, FALSE ),
( 238, 'Raisins secs', TRUE, FALSE, FALSE ),
( 239, 'Rhubarbe', TRUE, FALSE, FALSE ),
( 240, 'Romaine', TRUE, FALSE, FALSE ),
( 241, 'Romanesco', TRUE, FALSE, FALSE ),
( 242, 'Romarin', TRUE, FALSE, FALSE ),
( 243, 'Roquette', TRUE, FALSE, FALSE ),
( 244, 'Rutabaga', TRUE, FALSE, FALSE ),
( 245, 'Salade', TRUE, FALSE, FALSE ),
( 246, 'Salicorne', TRUE, FALSE, FALSE ),
( 247, 'Salsifis', TRUE, FALSE, FALSE ),
( 248, 'Sariette', TRUE, FALSE, FALSE ),
( 249, 'Sauge', TRUE, FALSE, FALSE ),
( 250, 'Scarole', TRUE, FALSE, FALSE ),
( 251, 'Scorsonère', TRUE, FALSE, FALSE ),
( 252, 'Sésame', TRUE, FALSE, FALSE ),
( 253, 'Shiitake', TRUE, FALSE, FALSE ),
( 254, 'Shishigatani', TRUE, FALSE, FALSE ),
( 255, 'Spiruline', TRUE, FALSE, FALSE ),
( 256, 'Sucrine', TRUE, FALSE, FALSE ),
( 257, 'Sucrine du Berry', TRUE, FALSE, FALSE ),
( 258, 'Sureau', TRUE, FALSE, FALSE ),
( 259, 'Tahin', TRUE, FALSE, FALSE ),
( 260, 'Thé', TRUE, FALSE, FALSE ),
( 261, 'Thym', FALSE, FALSE, TRUE ),
( 262, 'Tomate', FALSE, FALSE, TRUE ),
( 263, 'Tournesol', TRUE, FALSE, FALSE ),
( 264, 'Trèfle', TRUE, FALSE, FALSE ),
( 265, 'Trompette de la mort', TRUE, FALSE, FALSE ),
( 266, 'Truffe', TRUE, FALSE, FALSE ),
( 267, 'Umeboshi', TRUE, FALSE, FALSE ),
( 268, 'Verveine', TRUE, FALSE, FALSE ),
( 269, 'Violette', TRUE, FALSE, FALSE ),
( 270, 'Wakame', TRUE, FALSE, FALSE ),
( 271, 'Wasabi', TRUE, FALSE, FALSE ),
( 272, 'Yuzu', TRUE, FALSE, FALSE ),
( 273, 'Arachide', TRUE, FALSE, FALSE ),
( 274, 'Arrow-root', TRUE, FALSE, FALSE ),
( 275, 'Avoine', TRUE, FALSE, FALSE ),
( 276, 'Azuki', TRUE, FALSE, FALSE ),
( 277, 'Banane', TRUE, FALSE, FALSE ),
( 278, 'Biscotte', TRUE, FALSE, FALSE ),
( 279, 'Biscuit', TRUE, FALSE, FALSE ),
( 280, 'Blé', TRUE, FALSE, FALSE ),
( 281, 'Blé entier', TRUE, FALSE, FALSE ),
( 282, 'Boudoir', TRUE, FALSE, FALSE ),
( 283, 'Boulghour', TRUE, FALSE, FALSE ),
( 284, 'Châtaigne d’eau', TRUE, FALSE, FALSE ),
( 285, 'Crème soja', FALSE, TRUE, FALSE ),
( 286, 'Crosne', TRUE, FALSE, FALSE ),
( 287, 'Edamame', TRUE, FALSE, FALSE ),
( 288, 'Épeautre', TRUE, FALSE, FALSE ),
( 289, 'Farine d’épeautre', TRUE, FALSE, FALSE ),
( 290, 'Farine de blé', TRUE, FALSE, FALSE ),
( 291, 'Farine de châtaigne', TRUE, FALSE, FALSE ),
( 292, 'Farine de maïs', TRUE, FALSE, FALSE ),
( 293, 'Farine de millet', TRUE, FALSE, FALSE ),
( 294, 'Farine de pois chiche', TRUE, FALSE, FALSE ),
( 295, 'Farine de riz', TRUE, FALSE, FALSE ),
( 296, 'Farine de sarrasin', TRUE, FALSE, FALSE ),
( 297, 'Farine de seigle', TRUE, FALSE, FALSE ),
( 298, 'Farro', TRUE, FALSE, FALSE ),
( 299, 'Fenugrec', TRUE, FALSE, FALSE ),
( 300, 'Fève', TRUE, FALSE, FALSE ),
( 301, 'Flageolet', TRUE, FALSE, FALSE ),
( 302, 'Flocons d’avoine', TRUE, FALSE, FALSE ),
( 303, 'Fonio', TRUE, FALSE, FALSE ),
( 304, 'Grand épeautre', TRUE, FALSE, FALSE ),
( 305, 'Haricot blanc', TRUE, FALSE, FALSE ),
( 306, 'Haricot borlotti', TRUE, FALSE, FALSE ),
( 307, 'Haricot noir', TRUE, FALSE, FALSE ),
( 308, 'Haricot rouge', TRUE, FALSE, FALSE ),
( 309, 'Hominy', TRUE, FALSE, FALSE ),
( 310, 'Igname', TRUE, FALSE, FALSE ),
( 311, 'Lentille blonde', TRUE, FALSE, FALSE ),
( 312, 'Lentille corail', TRUE, FALSE, FALSE ),
( 313, 'Lentille noire', TRUE, FALSE, FALSE ),
( 314, 'Lentille verte', TRUE, FALSE, FALSE ),
( 315, 'Lentilles', TRUE, FALSE, FALSE ),
( 316, 'Maïs', TRUE, FALSE, FALSE ),
( 317, 'Malanga', TRUE, FALSE, FALSE ),
( 318, 'Manioc', TRUE, FALSE, FALSE ),
( 319, 'Millet', TRUE, FALSE, FALSE ),
( 320, 'Miso', TRUE, FALSE, FALSE ),
( 321, 'Mungo', TRUE, FALSE, FALSE ),
( 322, 'Orge', TRUE, FALSE, FALSE ),
( 323, 'Orzo', TRUE, FALSE, FALSE ),
( 324, 'Pain', FALSE, FALSE, TRUE ),
( 325, 'Pain de mie', TRUE, FALSE, FALSE ),
( 326, 'Pain rassis', TRUE, FALSE, FALSE ),
( 327, 'Patate douce', TRUE, FALSE, FALSE ),
( 328, 'Pâtes', TRUE, FALSE, FALSE ),
( 329, 'Pâtes à Lasagne', TRUE, FALSE, FALSE ),
( 330, 'Petit épeautre', TRUE, FALSE, FALSE ),
( 331, 'Petits pois', TRUE, FALSE, FALSE ),
( 332, 'Plantain', TRUE, FALSE, FALSE ),
( 333, 'Pois cassés', TRUE, FALSE, FALSE ),
( 334, 'Pois chiche', TRUE, FALSE, FALSE ),
( 335, 'Pois du Cap', TRUE, FALSE, FALSE ),
( 336, 'Pois gourmand', TRUE, FALSE, FALSE ),
( 337, 'Polenta', TRUE, FALSE, FALSE ),
( 338, 'Pomme de terre', TRUE, FALSE, FALSE ),
( 339, 'Protéines de soja', TRUE, FALSE, FALSE ),
( 340, 'Quinoa', TRUE, FALSE, FALSE ),
( 341, 'Ramen', TRUE, FALSE, FALSE ),
( 342, 'Riz', TRUE, FALSE, FALSE ),
( 343, 'Sarrasin', TRUE, FALSE, FALSE ),
( 344, 'Sauce soja', FALSE, TRUE, FALSE ),
( 345, 'Seigle', TRUE, FALSE, FALSE ),
( 346, 'Seitan', TRUE, FALSE, FALSE ),
( 347, 'Semoule de couscous', TRUE, FALSE, FALSE ),
( 348, 'Semoule fine', TRUE, FALSE, FALSE ),
( 349, 'Soba', TRUE, FALSE, FALSE ),
( 350, 'Soja', TRUE, FALSE, FALSE ),
( 351, 'Son d’avoine', TRUE, FALSE, FALSE ),
( 352, 'Sorgho', TRUE, FALSE, FALSE ),
( 353, 'Speculoos', TRUE, FALSE, FALSE ),
( 354, 'Tapioca', TRUE, FALSE, FALSE ),
( 355, 'Taro', TRUE, FALSE, FALSE ),
( 356, 'Tempeh', TRUE, FALSE, FALSE ),
( 357, 'Tofu', TRUE, FALSE, FALSE ),
( 358, 'Tonyu', TRUE, FALSE, FALSE ),
( 359, 'Topinambour', TRUE, FALSE, FALSE ),
( 360, 'Tortilla', TRUE, FALSE, FALSE ),
( 361, 'Udon', TRUE, FALSE, FALSE ),
( 362, 'Vermicelles de riz', TRUE, FALSE, FALSE ),
( 363, 'Yacon', TRUE, FALSE, FALSE ),
( 364, 'Babeurre', TRUE, FALSE, FALSE ),
( 365, 'Bûchette de chèvre', TRUE, FALSE, FALSE ),
( 366, 'Camembert', TRUE, FALSE, FALSE ),
( 367, 'Cheddar', TRUE, FALSE, FALSE ),
( 368, 'Chèvre', TRUE, FALSE, FALSE ),
( 369, 'Chèvre frais', TRUE, FALSE, FALSE ),
( 370, 'Comté', TRUE, FALSE, FALSE ),
( 371, 'Emmental', TRUE, FALSE, FALSE ),
( 372, 'Feta', TRUE, FALSE, FALSE ),
( 373, 'Fromage blanc', TRUE, FALSE, FALSE ),
( 374, 'Fromages à pâte ferme', TRUE, FALSE, FALSE ),
( 375, 'Fromages à pâte fraîche', TRUE, FALSE, FALSE ),
( 376, 'Fromages à pâte molle', TRUE, FALSE, FALSE ),
( 377, 'Fromages à pâte persillée', TRUE, FALSE, FALSE ),
( 378, 'Gruyère', TRUE, FALSE, FALSE ),
( 379, 'Lait', FALSE, TRUE, FALSE ),
( 380, 'Maroilles', TRUE, FALSE, FALSE ),
( 381, 'Mascarpone', TRUE, FALSE, FALSE ),
( 382, 'Mozzarella', TRUE, FALSE, FALSE ),
( 383, 'Parmesan', TRUE, FALSE, FALSE ),
( 384, 'Reblochon', TRUE, FALSE, FALSE ),
( 385, 'Ricotta', TRUE, FALSE, FALSE ),
( 386, 'Yaourt', TRUE, FALSE, FALSE ),
( 387, 'Yaourt grec', TRUE, FALSE, FALSE ),
( 388, 'Abats', TRUE, FALSE, FALSE ),
( 389, 'Agneau', TRUE, FALSE, FALSE ),
( 390, 'Anchois', TRUE, FALSE, FALSE ),
( 391, 'Boudin blanc', TRUE, FALSE, FALSE ),
( 392, 'Boudin noir', TRUE, FALSE, FALSE ),
( 393, 'Bœuf', TRUE, FALSE, FALSE ),
( 394, 'Cabillaud', TRUE, FALSE, FALSE ),
( 395, 'Caille', TRUE, FALSE, FALSE ),
( 396, 'Calmar', TRUE, FALSE, FALSE ),
( 397, 'Canard', TRUE, FALSE, FALSE ),
( 398, 'Cheval', TRUE, FALSE, FALSE ),
( 399, 'Chorizo', TRUE, FALSE, FALSE ),
( 400, 'Coq', TRUE, FALSE, FALSE ),
( 401, 'Crabe', TRUE, FALSE, FALSE ),
( 402, 'Crevette', TRUE, FALSE, FALSE ),
( 403, 'Dinde', TRUE, FALSE, FALSE ),
( 404, 'Dorade', TRUE, FALSE, FALSE ),
( 405, 'Escargot', TRUE, FALSE, FALSE ),
( 406, 'Foie', TRUE, FALSE, FALSE ),
( 407, 'Foie gras', TRUE, FALSE, FALSE ),
( 408, 'Fruits de mer', TRUE, FALSE, FALSE ),
( 409, 'Gélatine', TRUE, FALSE, FALSE ),
( 410, 'Gibiers', TRUE, FALSE, FALSE ),
( 411, 'Grenouille', TRUE, FALSE, FALSE ),
( 412, 'Hareng', TRUE, FALSE, FALSE ),
( 413, 'Huître', TRUE, FALSE, FALSE ),
( 414, 'Jambon', TRUE, FALSE, FALSE ),
( 415, 'Langoustine', TRUE, FALSE, FALSE ),
( 416, 'Lapin', TRUE, FALSE, FALSE ),
( 417, 'Lard', TRUE, FALSE, FALSE ),
( 418, 'Limande', TRUE, FALSE, FALSE ),
( 419, 'Lotte', TRUE, FALSE, FALSE ),
( 420, 'Maquereau', TRUE, FALSE, FALSE ),
( 421, 'Merlan', TRUE, FALSE, FALSE ),
( 422, 'Morue', TRUE, FALSE, FALSE ),
( 423, 'Moule', TRUE, FALSE, FALSE ),
( 424, 'Mouton', TRUE, FALSE, FALSE ),
( 425, 'Nuoc mam', TRUE, FALSE, FALSE ),
( 426, 'Oie', TRUE, FALSE, FALSE ),
( 427, 'Os à moelle', TRUE, FALSE, FALSE ),
( 428, 'Oursin', TRUE, FALSE, FALSE ),
( 429, 'Pétoncle', TRUE, FALSE, FALSE ),
( 430, 'Pigeon', TRUE, FALSE, FALSE ),
( 431, 'Pintade', TRUE, FALSE, FALSE ),
( 432, 'Poissons blancs', TRUE, FALSE, FALSE ),
( 433, 'Poissons gras', TRUE, FALSE, FALSE ),
( 434, 'Porc', TRUE, FALSE, FALSE ),
( 435, 'Poule', TRUE, FALSE, FALSE ),
( 436, 'Poulet', TRUE, FALSE, FALSE ),
( 437, 'Poulpe', TRUE, FALSE, FALSE ),
( 438, 'Roti de porc', TRUE, FALSE, FALSE ),
( 439, 'Sardine en boîte', TRUE, FALSE, FALSE ),
( 440, 'Sardine fraîche', TRUE, FALSE, FALSE ),
( 441, 'Saucisse', TRUE, FALSE, FALSE ),
( 442, 'Saumon', TRUE, FALSE, FALSE ),
( 443, 'Surimi', TRUE, FALSE, FALSE ),
( 444, 'Thon', TRUE, FALSE, FALSE ),
( 445, 'Thon en boîte', TRUE, FALSE, FALSE ),
( 446, 'Thon frais', TRUE, FALSE, FALSE ),
( 447, 'Truite', TRUE, FALSE, FALSE ),
( 448, 'Veau', TRUE, FALSE, FALSE ),
( 449, 'Viandes blanches', TRUE, FALSE, FALSE ),
( 450, 'Viandes rouges', TRUE, FALSE, FALSE ),
( 451, 'Volailles', TRUE, FALSE, FALSE ),
( 452, 'Oeuf', FALSE, FALSE, TRUE ),
( 453, 'Oeufs de poisson', TRUE, FALSE, FALSE ),
( 454, 'Beurre', TRUE, FALSE, FALSE ),
( 455, 'Beurre de cacahuète', TRUE, FALSE, FALSE ),
( 456, 'Crème fraîche', FALSE, TRUE, FALSE ),
( 457, 'Ghee', TRUE, FALSE, FALSE ),
( 458, 'Huile d’argan', FALSE, TRUE, FALSE ),
( 459, 'Huile d’olive', FALSE, TRUE, FALSE ),
( 460, 'Huile d’arachide', FALSE, TRUE, FALSE ),
( 461, 'Huile de colza', FALSE, TRUE, FALSE ),
( 462, 'Huile de noix', FALSE, TRUE, FALSE ),
( 463, 'Huile de pépins de raisin', FALSE, TRUE, FALSE ),
( 464, 'Huile de sésame', FALSE, TRUE, FALSE ),
( 465, 'Huile de tournesol', FALSE, TRUE, FALSE ),
( 466, 'Lait de coco', FALSE, TRUE, FALSE ),
( 467, 'Margarine', TRUE, FALSE, FALSE ),
( 468, 'Mascarpone', TRUE, FALSE, FALSE ),
( 469, 'Saindoux', TRUE, FALSE, FALSE ),
( 470, 'Bonbons', TRUE, FALSE, FALSE ),
( 471, 'Candi', TRUE, FALSE, FALSE ),
( 472, 'Canne à sucre', TRUE, FALSE, FALSE ),
( 473, 'Cassonade', TRUE, FALSE, FALSE ),
( 474, 'Chocolat', TRUE, FALSE, FALSE ),
( 475, 'Mélasse', TRUE, FALSE, FALSE ),
( 476, 'Miel', TRUE, FALSE, FALSE ),
( 477, 'Miel d’acacia', TRUE, FALSE, FALSE ),
( 478, 'Muscovado', TRUE, FALSE, FALSE ),
( 479, 'Rapadura', TRUE, FALSE, FALSE ),
( 480, 'Sirop d’érable', TRUE, FALSE, FALSE ),
( 481, 'Sucre blanc', TRUE, FALSE, FALSE ),
( 482, 'Vergeoise', TRUE, FALSE, FALSE ),
( 483, 'Sel', TRUE, FALSE, FALSE ),
( 484, 'Piment', TRUE, FALSE, FALSE ),
( 485, 'Gingembre', TRUE, FALSE, FALSE ),
( 486, 'Bouillon Légume', FALSE, TRUE, FALSE ),
( 487, 'Coulis de Tomate', FALSE, TRUE, FALSE ),
( 488, 'Poivre', TRUE, FALSE, FALSE ),
( 489, 'Herbes de Provence', TRUE, FALSE, FALSE );



INSERT INTO  "user" ("id", "first_name", "last_name", "user_name", "password", "account_role", "email" )  OVERRIDING SYSTEM VALUE
VALUES 
(1, 'Stuart', 'Rapoport', 'Stu','$2b$10$AZFl5xODySPZeu69FePQV.sh6iQO0vF6kM/Df2bPS7lcnjRKF6LMy', 'admin', 'stuart@gmail.com'),
(2, 'Virgil', 'Kwiatkowski', 'Virg','$2b$10$OP88Ko9oBgEUqGo9sGETr.yKSwvAZeRQq5T/9JjnbqSaXruB305mG', 'admin', 'virgil@gmail.com'),
(3, 'Clément', 'Herpe', 'Clé','$2b$10$LsLZ7qOWXUkCGKDpSDiWUeb5vN0uUpNLnN9eR0KsCbapXGzeqHPHO', 'admin', 'clement@gmail.com'),
(4, 'Stuart1', 'Rapoport', 'Stu1','$2b$10$AZFl5xODySPZeu69FePQV.sh6iQO0vF6kM/Df2bPS7lcnjRKF6LMy', 'user', 'stuart1@gmail.com'),
(5, 'Virgil1', 'Kwiatkowski', 'Virg1','$2b$10$OP88Ko9oBgEUqGo9sGETr.yKSwvAZeRQq5T/9JjnbqSaXruB305mG', 'user', 'virgil1@gmail.com'),
(6, 'Clément2', 'Herpe', 'Clé2','$2b$10$LsLZ7qOWXUkCGKDpSDiWUeb5vN0uUpNLnN9eR0KsCbapXGzeqHPHO', 'user', 'clement1@gmail.com'),
(7, 'Emmanuel', 'Macron', 'Manu','$2b$10$AZFl5xODySPZeu69FePQV.sh6iQO0vF6kM/Df2bPS7lcnjRKF6LMy', 'user', 'emmanuel@gmail.com'),
(8, 'Vladimir', 'Putin', 'Vlad','$2b$10$AZFl5xODySPZeu69FePQV.sh6iQO0vF6kM/Df2bPS7lcnjRKF6LMy', 'user', 'vladimir@gmail.com'),
(9, 'Donald', 'Trump', 'Don','$2b$10$AZFl5xODySPZeu69FePQV.sh6iQO0vF6kM/Df2bPS7lcnjRKF6LMy', 'user', 'donald@gmail.com'),
(10, 'Justin', 'Trudeau', 'Just','$2b$10$AZFl5xODySPZeu69FePQV.sh6iQO0vF6kM/Df2bPS7lcnjRKF6LMy', 'user', 'justin@gmail.com'),
(11, 'Giuseppe', 'Conté', 'Giuseppe','$2b$10$AZFl5xODySPZeu69FePQV.sh6iQO0vF6kM/Df2bPS7lcnjRKF6LMy', 'user', 'giuseppe@gmail.com'),
(12, 'Angela', 'Merkel', 'Angé','$2b$10$AZFl5xODySPZeu69FePQV.sh6iQO0vF6kM/Df2bPS7lcnjRKF6LMy', 'user', 'angela@gmail.com'),
(13, 'Yoshihide', 'Suga', 'Yoyo','$2b$10$AZFl5xODySPZeu69FePQV.sh6iQO0vF6kM/Df2bPS7lcnjRKF6LMy', 'user', 'yoshihide@gmail.com');



INSERT INTO  "recipe" ("id", "title" , "url","difficulty", "instructions" , "cooking_time","number_people", "user_id" ) 
OVERRIDING SYSTEM VALUE
VALUES 
( 1, 'Pommes au four', 'https://images.unsplash.com/photo-1567306226416-28f0efdc88ce', 'Facile', 'Préchauffez votre four à 190°C. Évidez les pommes en leur centre pour ôter les pépins, sans les éplucher. Mettez-les dans un plat allant au four. Dans le trou central de chacune, versez le sucre roux. Arrosez-les de jus de pomme ou versez un verre d’eau au fond du plat. Faites cuire une demi heure. Les pommes doivent être bien tendres. Servez les pommes tièdes, en dessert.', 30, 4, 1 ),
( 2, 'Mafé vegan', 'https://images.unsplash.com/photo-1516714435131-44d6b64dc6a2', 'Facile', 'Éplucher les carottes et la patate douce et les couper en petits dés. Faire revenir l’ail et l’oignon avec l’huile d’arachide dans un faitout, puis ajouter les légumes. Laisser cuire en remuant régulièrement pendant 5 minutes. Couvrir avec le bouillon de légumes. S’il n’y en pas assez, ajouter de l’eau jusqu’à couvrir complètement. Saler. Ajouter les épices, le jus du citron, le piment, les PST, le coulis de tomates et la purée de cacahuètes. Laisser mijoter au moins une demi-heure. Au bout d’une heure, c’est un vrai régal.', 90, 6, 1 ),
( 3, 'Lasagne courgettes aubergines mozza', 'https://images.unsplash.com/photo-1574894709920-11b28e7367e3', 'Facile', 'Trancher les légumes dans la longueur, passer les tranches sous le grill avec un peu d’huile d’olive, de fleur de sel, de poivre et d’herbes de Provence. Dans un plat à gratin de taille moyenne, disposer un fond de coulis de tomate, une couche de pâtes à lasagne, une couche de tranches de courgettes et aubergines grillés, une couche de tranches de mozza puis on recommence sauce pâte légumes fromage jusqu’à épuisement des ingrédients, on finit par la mozza. Enfourner au th 6 (180°C) pour 35 à 40 min.', 60, 6, 1 ),
( 4, 'Rôti de porc aux oignons', 'https://images.unsplash.com/photo-1514944617518-12c7891ec602', 'Facile', 'Préchauffez le four à 200°C. Pelez les gousses d’ail, ôtez leurs germes et coupez-les en longueur, en deux ou quatre. Déposez le rôti dans un plat allant au four. Piquez-le avec l’ail : avec un petit couteau, entaillez la chair pour y introduire les gousses. Enfournez pendant 15 minutes. Pendant ce temps, préparez les oignons et les pommes de terre. Épluchez-les. Coupez l’oignon en rondelles et les pommes de terre en grosses frites. Mélangez-les dans un saladier. Salez et poivrez. Après 15 minutes de cuisson, ajoutez les légumes autour du rôti. Couvrez d’une feuille d’aluminium et remettez le plat au four. Laissez cuire trois quart d’heure. Retournez les pommes de terre à mi-cuisson pour qu’elles soient toutes dorées. Servez chaud avec une salade verte à l’échalote', 80, 4, 1 ),
( 5, 'Velouté de potimarron aux lentilles corail et lait de coco', 'https://images.unsplash.com/photo-1476718406336-bb5a9690ee2a', 'Facile', 'Couper l’oignon en petits morceaux et le mettre dans la casserole à suer avec un peu d’huile de coco. Couper le potimarron en morceaux et l’ajouter aux oignons. Laisser les oignons tomber.
Puis ajouter l’eau, le bouillon de légumes, le laurier, le thym, le gingembre, sel et poivre. Laisser cuire 10 min puis ajouter les lentilles corail. Laisser cuire 10 à 15 min. Avec une écumoire, retirer le laurier et le thym. Puis mixer le tout en ajoutant le lait de coco. Goûter et ajuster l’assaisonnement. C’est prêt. Déguster.', 40, 4, 1 ),
( 6, 'Soufflé au gruyère', 'https://images.unsplash.com/photo-1579711220373-155ffc441b36', 'Facile', 'Préparation de la béchamel. Dans une casserole, faites fondre le beurre avec la farine. Salez et poivrez. Remuez énergiquement sur feu assez vif et versez progressivement le lait tout en continuant à remuer (idéalement avec un fouet ou une spatule en bois). Montez ainsi une béchamel. Laissez la cuire quelques minutes pour qu’elle soit épaisse et bien lisse. Préparation du soufflé.
Faites préchauffer le four Th 6 (180°C). Sortez la béchamel du feu. Lorsque la béchamel est tiède, ajoutez le fromage, les œufs et la noix de muscade. Mélangez bien. Battez les blancs en neige ferme (vive le robot !). Incorporez-les à la béchamel à l’aide d’une spatule de manière à ce que le mélange soit bien homogène, sans y aller trop énergiquement pour ne pas écraser la neige. Cuisson du soufflé. Beurrez un moule à soufflé (bords hauts) et remplissez-le de la préparation, puis enfournez. Attention un soufflé double de taille, choisissez votre moule en fonction ! Au bout de 10 min, montez la température à th 7 (210°C). Laissez cuire encore 35 min (soit 45 en tout). Vous pouvez vérifier la cuisson en plantant un couteau dans le soufflé et constater que le cœur n’est plus liquide. Dégustez immédiatement, avec une salade verte par exemple.', 70, 4, 1 )
;



INSERT INTO  "group" ("id", "name" ) OVERRIDING SYSTEM VALUE
VALUES 
(1, 'Famille Dupont'),
(2, 'Vacances Ski Oclock' ),
(3, 'Bureau de developpeurs'),
(4, 'Famille Alstan'),
(5, 'Semaine Karting'),
(6, 'Fête Dongeons et Dragons');

INSERT INTO  "meal" ("id", "day" , "time", "group_id" ) OVERRIDING SYSTEM VALUE
VALUES 
(1, '2020-10-15', 'Déjeuner', 1 ),
(2, '2020-10-16', 'Dîner', 1 ),
(3, '2020-10-17', 'Déjeuner', 1 ),
(4, '2020-10-18', 'Dîner', 1 ),
(5, '2020-10-19', 'Déjeuner', 2 ),
(6, '2020-10-20', 'Déjeuner', 2 ),
(7, '2020-10-21', 'Dîner', 2 ),
(8, '2020-10-22', 'Dîner', 2 ),
(9, '2020-10-21', 'Petit-Déjeuner', 2 ),
(10, '2020-10-21', 'Petit-Déjeuner', 3 ),
(11, '2020-10-21', 'Petit-Déjeuner', 4 );






INSERT INTO  "review" ("id", "comment", "grade", "recipe_id", "user_id")  OVERRIDING SYSTEM VALUE
VALUES 
(1, 'L''auteur devrait revoir sa copie et peut-être investir dans...un Bescherelle avant d''écrire des recettes.', 1, 1,1),
(2, 'Trop Bon. Miam', 10, 1,3),
(3, 'Trop piquant. Ne mets pas du poivre. Mais sinon, je le recommande fortement', 8, 1,5),
(4, 'Faut faire un peu de sport après.', 2, 2,5),
(5, 'Je referai.', 8, 2,5),
(6, null, 1, 2,5);

INSERT INTO  "type" ("id", "name")  OVERRIDING SYSTEM VALUE
VALUES 
( 1, 'Végétarian' ),
( 2, 'Déssert' ),
( 3, 'Viande' ),
( 4, 'Végan' ),
( 5, 'Italien' ),
( 6, 'Japonais' ),
( 7, 'Entrée' ),
( 8, 'Plat' );




INSERT INTO  "family" ("id", "name")  OVERRIDING SYSTEM VALUE
VALUES 
( 1, 'Boissons' ),
( 2, 'Fruits et légumes' ),
( 3, 'Céréales et féculents' ),
( 4, 'Produits laitiers' ),
( 5, 'Viandes, poissons, œufs' ),
( 6, 'Corps gras' ),
( 7, 'Sucres' ),
( 8, 'Epices' );

INSERT INTO  "type_defines_recipe" ("recipe_id", "type_id")  VALUES
( 1, 1 ),
( 1, 2 ),
( 2, 4 ),
( 2, 8 ),
( 3, 4 ),
( 3, 8 ),
( 4, 3 ),
( 4, 8 ),
( 5, 4 ),
( 5, 7 ),
( 6, 1 ),
( 6, 8 );


INSERT INTO  "recipe_contains_ingredient" ("recipe_id", "ingredient_id", "quantity", "unit")  VALUES
( 1, 220, 4, null ),
( 1, 473, 0.05, null ),
( 2, 53, 0.2, null ),
( 2, 327, 0.2, null ),
( 2, 189, 0.15, null ),
( 2, 487, 0.4, null ),
( 2, 455, 0.15, null ),
( 2, 460, 0.05, null ),
( 2, 19, 0.02, null ),
( 2, 486, 1, null ),
( 2, 82, 1, null ),
( 2, 485, 0.1, null ),
( 2, 484, 0.05, null ),
( 2, 483, 0.1, null ),
( 3, 99, 0.5, null ),
( 3, 31, 0.5, null ),
( 3, 382, 0.4, null ),
( 3, 329, 0.5, null ),
( 3, 487, 0.2, null ),
( 3, 459, 0.1, null ),
( 3, 483, 0.1, null ),
( 3, 488, 0.1, null ),
( 3, 489, 0.1, null ),
( 4, 434, 0.6, null ),
( 4, 19, 0.2, null ),
( 4, 189, 0.4, null ),
( 4, 338, 1, null ),
( 4, 483, 0.1, null ),
( 4, 488, 0.1, null ),
( 5, 223, 1.5, null ),
( 5, 312, 0.4, null ),
( 5, 189, 0.3, null ),
( 5, 485, 0.005, null ),
( 5, 486, 1, null ),
( 5, 7, 0.4, null ),
( 5, 261, 0.002, null ),
( 5, 157, 0.0002, null ),
( 5, 462, 0.005, null ),
( 5, 5, 1, null ),
( 6, 378, 125, null ),
( 6, 290, 0.1, null ),
( 6, 379, 0.05, null ),
( 6, 454, 0.08, null ),
( 6, 452, 6, null ),
( 6, 178, 0.001, null ),
( 6, 483, 0.002, null ),
( 6, 488, 0.001, null );





INSERT INTO  "family_describes_ingredient" ("ingredient_id", "family_id")  VALUES
( 1, 1 ),
( 2, 1 ),
( 3, 1 ),
( 4, 1 ),
( 5, 1 ),
( 6, 1 ),
( 7, 1 ),
( 8, 1 ),
( 9, 1 ),
( 10, 1 ),
( 11, 1 ),
( 12, 1 ),
( 13, 1 ),
( 14, 1 ),
( 15, 2 ),
( 16, 2 ),
( 17, 2 ),
( 18, 2 ),
( 19, 2 ),
( 20, 2 ),
( 21, 2 ),
( 22, 2 ),
( 23, 2 ),
( 24, 2 ),
( 25, 2 ),
( 26, 2 ),
( 27, 2 ),
( 28, 2 ),
( 29, 2 ),
( 30, 2 ),
( 31, 2 ),
( 32, 2 ),
( 33, 2 ),
( 34, 2 ),
( 35, 2 ),
( 36, 2 ),
( 37, 2 ),
( 38, 2 ),
( 39, 2 ),
( 40, 2 ),
( 41, 2 ),
( 42, 2 ),
( 43, 2 ),
( 44, 2 ),
( 45, 2 ),
( 46, 2 ),
( 47, 2 ),
( 48, 2 ),
( 49, 2 ),
( 50, 2 ),
( 51, 2 ),
( 52, 2 ),
( 53, 2 ),
( 54, 2 ),
( 55, 2 ),
( 56, 2 ),
( 57, 2 ),
( 58, 2 ),
( 59, 2 ),
( 60, 2 ),
( 61, 2 ),
( 62, 2 ),
( 63, 2 ),
( 64, 2 ),
( 65, 2 ),
( 66, 2 ),
( 67, 2 ),
( 68, 2 ),
( 69, 2 ),
( 70, 2 ),
( 71, 2 ),
( 72, 2 ),
( 73, 2 ),
( 74, 2 ),
( 75, 2 ),
( 76, 2 ),
( 77, 2 ),
( 78, 2 ),
( 79, 2 ),
( 80, 2 ),
( 81, 2 ),
( 82, 2 ),
( 83, 2 ),
( 84, 2 ),
( 85, 2 ),
( 86, 2 ),
( 87, 2 ),
( 88, 2 ),
( 89, 2 ),
( 90, 2 ),
( 91, 2 ),
( 92, 2 ),
( 93, 2 ),
( 94, 2 ),
( 95, 2 ),
( 96, 2 ),
( 97, 2 ),
( 98, 2 ),
( 99, 2 ),
( 100, 2 ),
( 101, 2 ),
( 102, 2 ),
( 103, 2 ),
( 104, 2 ),
( 105, 2 ),
( 106, 2 ),
( 107, 2 ),
( 108, 2 ),
( 109, 2 ),
( 110, 2 ),
( 111, 2 ),
( 112, 2 ),
( 113, 2 ),
( 114, 2 ),
( 115, 2 ),
( 116, 2 ),
( 117, 2 ),
( 118, 2 ),
( 119, 2 ),
( 120, 2 ),
( 121, 2 ),
( 122, 2 ),
( 123, 2 ),
( 124, 2 ),
( 125, 2 ),
( 126, 2 ),
( 127, 2 ),
( 128, 2 ),
( 129, 2 ),
( 130, 2 ),
( 131, 2 ),
( 132, 2 ),
( 133, 2 ),
( 134, 2 ),
( 135, 2 ),
( 136, 2 ),
( 137, 2 ),
( 138, 2 ),
( 139, 2 ),
( 140, 2 ),
( 141, 2 ),
( 142, 2 ),
( 143, 2 ),
( 144, 2 ),
( 145, 2 ),
( 146, 2 ),
( 147, 2 ),
( 148, 2 ),
( 149, 2 ),
( 150, 2 ),
( 151, 2 ),
( 152, 2 ),
( 153, 2 ),
( 154, 2 ),
( 155, 2 ),
( 156, 2 ),
( 157, 2 ),
( 158, 2 ),
( 159, 2 ),
( 160, 2 ),
( 161, 2 ),
( 162, 2 ),
( 163, 2 ),
( 164, 2 ),
( 165, 2 ),
( 166, 2 ),
( 167, 2 ),
( 168, 2 ),
( 169, 2 ),
( 170, 2 ),
( 171, 2 ),
( 172, 2 ),
( 173, 2 ),
( 174, 2 ),
( 175, 2 ),
( 176, 2 ),
( 177, 2 ),
( 178, 2 ),
( 179, 2 ),
( 180, 2 ),
( 181, 2 ),
( 182, 2 ),
( 183, 2 ),
( 184, 2 ),
( 185, 2 ),
( 186, 2 ),
( 187, 2 ),
( 188, 2 ),
( 189, 2 ),
( 190, 2 ),
( 191, 2 ),
( 192, 2 ),
( 193, 2 ),
( 194, 2 ),
( 195, 2 ),
( 196, 2 ),
( 197, 2 ),
( 198, 2 ),
( 199, 2 ),
( 200, 2 ),
( 201, 2 ),
( 202, 2 ),
( 203, 2 ),
( 204, 2 ),
( 205, 2 ),
( 206, 2 ),
( 207, 2 ),
( 208, 2 ),
( 209, 2 ),
( 210, 2 ),
( 211, 2 ),
( 212, 2 ),
( 213, 2 ),
( 214, 2 ),
( 215, 2 ),
( 216, 2 ),
( 217, 2 ),
( 218, 2 ),
( 219, 2 ),
( 220, 2 ),
( 221, 2 ),
( 222, 2 ),
( 223, 2 ),
( 224, 2 ),
( 225, 2 ),
( 226, 2 ),
( 227, 2 ),
( 228, 2 ),
( 229, 2 ),
( 230, 2 ),
( 231, 2 ),
( 232, 2 ),
( 233, 2 ),
( 234, 2 ),
( 235, 2 ),
( 236, 2 ),
( 237, 2 ),
( 238, 2 ),
( 239, 2 ),
( 240, 2 ),
( 241, 2 ),
( 242, 2 ),
( 243, 2 ),
( 244, 2 ),
( 245, 2 ),
( 246, 2 ),
( 247, 2 ),
( 248, 2 ),
( 249, 2 ),
( 250, 2 ),
( 251, 2 ),
( 252, 2 ),
( 253, 2 ),
( 254, 2 ),
( 255, 2 ),
( 256, 2 ),
( 257, 2 ),
( 258, 2 ),
( 259, 2 ),
( 260, 2 ),
( 261, 2 ),
( 262, 2 ),
( 263, 2 ),
( 264, 2 ),
( 265, 2 ),
( 266, 2 ),
( 267, 2 ),
( 268, 2 ),
( 269, 2 ),
( 270, 2 ),
( 271, 2 ),
( 272, 2 ),
( 273, 3 ),
( 274, 3 ),
( 275, 3 ),
( 276, 3 ),
( 277, 3 ),
( 278, 3 ),
( 279, 3 ),
( 280, 3 ),
( 281, 3 ),
( 282, 3 ),
( 283, 3 ),
( 284, 3 ),
( 285, 3 ),
( 286, 3 ),
( 287, 3 ),
( 288, 3 ),
( 289, 3 ),
( 290, 3 ),
( 291, 3 ),
( 292, 3 ),
( 293, 3 ),
( 294, 3 ),
( 295, 3 ),
( 296, 3 ),
( 297, 3 ),
( 298, 3 ),
( 299, 3 ),
( 300, 3 ),
( 301, 3 ),
( 302, 3 ),
( 303, 3 ),
( 304, 3 ),
( 305, 3 ),
( 306, 3 ),
( 307, 3 ),
( 308, 3 ),
( 309, 3 ),
( 310, 3 ),
( 311, 3 ),
( 312, 3 ),
( 313, 3 ),
( 314, 3 ),
( 315, 3 ),
( 316, 3 ),
( 317, 3 ),
( 318, 3 ),
( 319, 3 ),
( 320, 3 ),
( 321, 3 ),
( 322, 3 ),
( 323, 3 ),
( 324, 3 ),
( 325, 3 ),
( 326, 3 ),
( 327, 3 ),
( 328, 3 ),
( 329, 3 ),
( 330, 3 ),
( 331, 3 ),
( 332, 3 ),
( 333, 3 ),
( 334, 3 ),
( 335, 3 ),
( 336, 3 ),
( 337, 3 ),
( 338, 3 ),
( 339, 3 ),
( 340, 3 ),
( 341, 3 ),
( 342, 3 ),
( 343, 3 ),
( 344, 3 ),
( 345, 3 ),
( 346, 3 ),
( 347, 3 ),
( 348, 3 ),
( 349, 3 ),
( 350, 3 ),
( 351, 3 ),
( 352, 3 ),
( 353, 3 ),
( 354, 3 ),
( 355, 3 ),
( 356, 3 ),
( 357, 3 ),
( 358, 3 ),
( 359, 3 ),
( 360, 3 ),
( 361, 3 ),
( 362, 3 ),
( 363, 3 ),
( 364, 4 ),
( 365, 4 ),
( 366, 4 ),
( 367, 4 ),
( 368, 4 ),
( 369, 4 ),
( 370, 4 ),
( 371, 4 ),
( 372, 4 ),
( 373, 4 ),
( 374, 4 ),
( 375, 4 ),
( 376, 4 ),
( 377, 4 ),
( 378, 4 ),
( 379, 4 ),
( 380, 4 ),
( 381, 4 ),
( 382, 4 ),
( 383, 4 ),
( 384, 4 ),
( 385, 4 ),
( 386, 4 ),
( 387, 4 ),
( 388, 5 ),
( 389, 5 ),
( 390, 5 ),
( 391, 5 ),
( 392, 5 ),
( 393, 5 ),
( 394, 5 ),
( 395, 5 ),
( 396, 5 ),
( 397, 5 ),
( 398, 5 ),
( 399, 5 ),
( 400, 5 ),
( 401, 5 ),
( 402, 5 ),
( 403, 5 ),
( 404, 5 ),
( 405, 5 ),
( 406, 5 ),
( 407, 5 ),
( 408, 5 ),
( 409, 5 ),
( 410, 5 ),
( 411, 5 ),
( 412, 5 ),
( 413, 5 ),
( 414, 5 ),
( 415, 5 ),
( 416, 5 ),
( 417, 5 ),
( 418, 5 ),
( 419, 5 ),
( 420, 5 ),
( 421, 5 ),
( 422, 5 ),
( 423, 5 ),
( 424, 5 ),
( 425, 5 ),
( 426, 5 ),
( 427, 5 ),
( 428, 5 ),
( 429, 5 ),
( 430, 5 ),
( 431, 5 ),
( 432, 5 ),
( 433, 5 ),
( 434, 5 ),
( 435, 5 ),
( 436, 5 ),
( 437, 5 ),
( 438, 5 ),
( 439, 5 ),
( 440, 5 ),
( 441, 5 ),
( 442, 5 ),
( 443, 5 ),
( 444, 5 ),
( 445, 5 ),
( 446, 5 ),
( 447, 5 ),
( 448, 5 ),
( 449, 5 ),
( 450, 5 ),
( 451, 5 ),
( 452, 5 ),
( 453, 5 ),
( 454, 6 ),
( 455, 6 ),
( 456, 6 ),
( 457, 6 ),
( 458, 6 ),
( 459, 6 ),
( 460, 6 ),
( 461, 6 ),
( 462, 6 ),
( 463, 6 ),
( 464, 6 ),
( 465, 6 ),
( 466, 6 ),
( 467, 6 ),
( 468, 6 ),
( 469, 6 ),
( 470, 7 ),
( 471, 7 ),
( 472, 7 ),
( 473, 7 ),
( 474, 7 ),
( 475, 7 ),
( 476, 7 ),
( 477, 7 ),
( 478, 7 ),
( 479, 7 ),
( 480, 7 ),
( 481, 7 ),
( 482, 7 ),
( 483, 8 ),
( 484, 8 ),
( 485, 8 ),
( 486, 8 ),
( 487, 8 ),
( 488, 8 ),
( 489, 8 );



INSERT INTO  "user_likes_recipe" ("recipe_id", "user_id")  VALUES
(1, 1),
(2, 4);

INSERT INTO  "user_belongs_group" ("group_id", "user_id",  "user_role")  VALUES
(1, 4,'Propriétaire'),
(2, 3,'Propriétaire'),
(3, 2,'Propriétaire'),
(4, 1,'Propriétaire'),
(5, 1,'Propriétaire'),
(6, 1,'Propriétaire'),
(2, 4,'Ecriture'),
(2, 4,'Ecriture'),
(2, 5,'Ecriture'),
(2, 6,'Ecriture'),
(3, 3,'Lecture'),
(4, 2,'Lecture'),
(4, 3,'Ecriture');


INSERT INTO  "meal_has_recipe" ("meal_id", "recipe_id", "number_people")  VALUES
(1, 1, 6),
(1, 2, 6),
(2, 2, 4),
(3, 3, 6),
(4, 3, 4),
(4, 4, 6),
(5, 4, 8),
(5, 2, 2),
(6, 4, 6);











COMMIT;

BEGIN;

-- PostGres avec le type serial n"incrémente pas automatiquement de façon implicite la séquence rattaché à la colonne !
-- Il faut donc mettre à jour la valeur courante de chacune des séquences en séléctionnant l"id maximum de chaque table
--
SELECT setval('user_id_seq', max(id)) FROM "user";
SELECT setval('ingredient_id_seq', max(id)) FROM "ingredient";
SELECT setval('recipe_id_seq', max(id)) FROM "recipe";
SELECT setval('meal_id_seq', max(id)) FROM "meal";
SELECT setval('group_id_seq', max(id)) FROM "group";
SELECT setval('review_id_seq', max(id)) FROM "review";
SELECT setval('type_id_seq', max(id)) FROM "type";
SELECT setval('family_id_seq', max(id)) FROM "family";
COMMIT;
